{"version":3,"file":"component---src-pages-howtoreach-js-8cfcdf5a0ba554338e29.js","mappings":"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","sources":["webpack://material-ui-gatsby/./node_modules/.pnpm/@mui+material@5.15.11_@emotion+react@11.11.4_@emotion+styled@11.11.0_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Card/cardClasses.js","webpack://material-ui-gatsby/./node_modules/.pnpm/@mui+material@5.15.11_@emotion+react@11.11.4_@emotion+styled@11.11.0_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/Card/Card.js","webpack://material-ui-gatsby/./node_modules/.pnpm/@mui+material@5.15.11_@emotion+react@11.11.4_@emotion+styled@11.11.0_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://material-ui-gatsby/./node_modules/.pnpm/@mui+material@5.15.11_@emotion+react@11.11.4_@emotion+styled@11.11.0_react-dom@18.2.0_react@18.2.0/node_modules/@mui/material/CardContent/CardContent.js","webpack://material-ui-gatsby/./src/tables/TrainsTable.js","webpack://material-ui-gatsby/./src/tables/RoadDistanceTable.js","webpack://material-ui-gatsby/./src/tables/AirportsTable.js","webpack://material-ui-gatsby/./src/pages/howtoreach.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\n\nconst data = [\n  { station: \"BHILWARA (BHL)\", distance: \"72\" },\n  { station: \"KOTA JN (KOTA)\", distance: \"75\" },\n  { station: \"INDARGARH (IDG)\", distance: \"97\" },\n];\n\nfunction TrainsTable() {\n  return (\n    <TableContainer component={Paper} alignItems=\"center\">\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">Station</TableCell>\n            <TableCell align=\"center\">Distance (kms)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.station}>\n              <TableCell align=\"center\">{row.station}</TableCell>\n              <TableCell align=\"center\">{row.distance}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default TrainsTable;\n","import React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport Table from \"@mui/material/Table\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableRow from \"@mui/material/TableRow\";\nimport TableCell from \"@mui/material/TableCell\";\n\nconst data = [\n  { city: \"Bhilwara\", distance: 72 },\n  { city: \"Kota\", distance: 74 },\n  { city: \"Ajmer\", distance: 113 },\n  { city: \"Jaipur\", distance: 189 },\n  { city: \"Delhi\", distance: 438 },\n  { city: \"Mumbai\", distance: 1000 },\n];\n\nfunction RoadDistanceTable() {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">City</TableCell>\n            <TableCell align=\"center\">Distance (kms)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row) => (\n            <TableRow key={row.city}>\n              <TableCell align=\"center\">{row.city}</TableCell>\n              <TableCell align=\"center\">{row.distance}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default RoadDistanceTable;\n","import React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n} from \"@mui/material\";\n\nconst InternationalAirports = [\n  { city: \"Jaipur\", name: \"Jaipur International Airport\", distance: 171 },\n  { city: \"Delhi\", name: \"Indira Gandhi International Airport\", distance: 420 },\n  {\n    city: \"Ahmedabad\",\n    name: \"Sardar Vallabhbhai Patel International Airport\",\n    distance: 489,\n  },\n];\n\nconst DomesticAirports = [\n  { city: \"Kishangarh\", name: \"Kishangarh Airport\", distance: 118 },\n  { city: \"Jaipur\", name: \"Jaipur International Airport\", distance: 171 },\n  { city: \"Udaipur\", name: \"Maharana Pratap Airport\", distance: 240 },\n  { city: \"Jodhpur\", name: \"Jodhpur Airport\", distance: 312 },\n];\n\nconst LocalAirports = [{ city: \"Kota\", name: \"Kota Airport\", distance: 101 }];\n\nfunction AirTable({ data, title }) {\n  return (\n    <TableContainer component={Paper}>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>City</TableCell>\n            <TableCell>Airport Name</TableCell>\n            <TableCell>Distance (kms)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((row, index) => (\n            <TableRow key={index}>\n              <TableCell>{row.city}</TableCell>\n              <TableCell>{row.name}</TableCell>\n              <TableCell>{row.distance}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nfunction AirportsTable() {\n  return (\n    <div>\n      <Typography gutterBottom variant=\"h6\" component=\"div\" align=\"center\">\n        International Airports\n      </Typography>\n      <AirTable data={InternationalAirports} />\n      <br />\n      <Typography gutterBottom variant=\"h6\" component=\"div\" align=\"center\">\n        Domestic Airports\n      </Typography>\n      <AirTable data={DomesticAirports} />\n      <br />\n      <Typography gutterBottom variant=\"h6\" component=\"div\" align=\"center\">\n        Local Airports\n      </Typography>\n      <AirTable data={LocalAirports} />\n    </div>\n  );\n}\n\nexport default AirportsTable;\n","import * as React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport TrainsTable from \"../tables/TrainsTable\";\nimport RoadDistanceTable from \"../tables/RoadDistanceTable\";\nimport AirportsTable from \"../tables/AirportsTable\";\nimport Layout from \"../components/layout\";\n\nconst GoogleMap = ({ mapSrc }) => {\n  return (\n    <Box>\n      <iframe\n        title=\"jahazpur_map\"\n        src={mapSrc}\n        width=\"100%\"\n        height=\"400\"\n        style={{ border: \"0\" }}\n        allowfullscreen=\"\"\n        loading=\"lazy\"\n        referrerpolicy=\"no-referrer-when-downgrade\"\n      />\n    </Box>\n  );\n};\n\nconst MapCard = ({ mapUrl }) => {\n  return (\n    <Card>\n      <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\n        How to Reach\n      </Typography>\n\n      <GoogleMap mapSrc={mapUrl} />\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">\n          By Road\n        </Typography>\n        <Typography variant=\"body\" color=\"text.secondary\" align=\"justify\">\n          Jahazpur is well connected by road. The nearest cities to the temple\n          are Deoli and Bhilwara which have state transport and private buses\n          running throughout the day. Bus connectivity during night is a bit\n          sketchy. Details of the bus timings can be found on the RSRTC website.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"body\" color=\"text.secondary\" align=\"justify\">\n          There are some preferred taxi operators whose details with telephone\n          numbers can be found on the contact page.\n        </Typography>\n        <br />\n        <br />\n        <Typography variant=\"body\" color=\"text.secondary\">\n          Distances from the major cities are as follows:\n        </Typography>\n        <RoadDistanceTable />\n        <br />\n        <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">\n          By Train\n        </Typography>\n        <Typography variant=\"body\" color=\"text.secondary\" align=\"justify\">\n          There is no direct train to Jahazpur but nearby cities are well\n          connected by trains. The nearest railway stations to Jahazpur are\n          Bhilwara, Kota and Indargarh. Here is a quick summary about the\n          railway stations and respective distances. For more information,\n          please refer Indian Railways website.\n        </Typography>\n        <br />\n        <TrainsTable />\n        <br />\n        <Typography gutterBottom variant=\"h5\" component=\"div\" align=\"center\">\n          By Air\n        </Typography>\n        <Typography variant=\"body\" color=\"text.secondary\" align=\"justify\">\n          Jahazpur doesn't have a dedicated airport. The nearest airports are at\n          Jaipur, Udaipur, Delhi and Ahmedabad. Here is a quick summary about\n          the airports and respective distances. For flight schedules, please\n          check with the airlines.\n        </Typography>\n        <br />\n        <AirportsTable />\n      </CardContent>\n    </Card>\n  );\n};\n\nconst HowToReach = () => {\n  return (\n    <Layout pageTitle=\"How to Reach\">\n      <MapCard mapUrl=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d115123.85811039567!2d75.20243763906248!3d25.61752170000001!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x396f2102eee91549%3A0xe212a5fa0c2632e1!2sPatriya%20(Didwaniya)%20Samaj%20Sati%20Mataji%20Mandir!5e0!3m2!1sen!2sus!4v1696560529085!5m2!1sen!2sus\" />\n    </Layout>\n  );\n};\n\nexport const Head = () => <title>How to Reach</title>;\n\nexport default HowToReach;\n"],"names":["getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","inProps","ref","useThemeProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","component","as","data","station","distance","React","TableContainer","alignItems","Table","TableHead","TableRow","TableCell","align","TableBody","map","row","key","city","InternationalAirports","DomesticAirports","LocalAirports","AirTable","_ref","title","index","Typography","gutterBottom","variant","GoogleMap","mapSrc","Box","src","width","height","style","border","allowfullscreen","loading","referrerpolicy","MapCard","_ref2","mapUrl","Card","CardContent","color","RoadDistanceTable","TrainsTable","AirportsTable","Head","HowToReach","Layout","pageTitle"],"sourceRoot":""}